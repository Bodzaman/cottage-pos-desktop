name: Publish Electron Assets on Release

on:
  release:
    types: [published]

permissions:
  contents: write
  actions: read

jobs:
  publish-assets:
    runs-on: windows-latest
    timeout-minutes: 60

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: yarn install

    - name: Build Electron app (no publish)
      run: yarn run dist
      env:
        CI: true

    - name: Upload release assets
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_TAG: ${{ github.event.release.tag_name }}
      run: |
        echo "Uploading assets for release: $RELEASE_TAG"

        # Find all artifacts
        EXE_FILE=$(find dist/ -name "*.exe" | head -1)
        YML_FILE=$(find dist/ -name "latest.yml" | head -1)
        BLOCKMAP_FILE=$(find dist/ -name "*.blockmap" | head -1)

        if [ -f "$EXE_FILE" ]; then
          echo "Uploading: $EXE_FILE"
          gh release upload "$RELEASE_TAG" "$EXE_FILE" --clobber
        fi

        if [ -f "$YML_FILE" ]; then
          echo "Uploading: $YML_FILE"
          gh release upload "$RELEASE_TAG" "$YML_FILE" --clobber
        fi

        if [ -f "$BLOCKMAP_FILE" ]; then
          echo "Uploading: $BLOCKMAP_FILE"
          gh release upload "$RELEASE_TAG" "$BLOCKMAP_FILE" --clobber
        fi

        echo "Upload complete!"

    - name: Verify upload
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_TAG: ${{ github.event.release.tag_name }}
      run: |
        echo "Checking uploaded assets..."
        gh release view "$RELEASE_TAG" --json assets --jq '.assets[].name'
