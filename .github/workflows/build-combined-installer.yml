name: Build Combined Installer

on:
  push:
    branches:
      - main
    paths:
      - 'installer/**'
      - 'printer-service/**'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.1)'
        required: true
        default: '1.0.1'
      
jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Get version
        id: get_version
        shell: powershell
        run: |
          if ("${{ github.event_name }}" -eq "workflow_dispatch") {
            $version = "${{ github.event.inputs.version }}"
          } else {
            $version = "1.0.1"
          }
          echo "version=$version" >> $env:GITHUB_OUTPUT
          echo "Building version: $version"
      
      - name: Install Electron dependencies
        run: npm ci
      
      - name: Build Electron app
        run: npm run build
        env:
          CI: false
      
      - name: Verify Electron build
        shell: powershell
        run: |
          if (Test-Path "dist\win-unpacked") {
            Write-Host "[OK] Electron build successful - dist/win-unpacked exists"
            $fileCount = (Get-ChildItem -Path "dist\win-unpacked" -Recurse).Count
            Write-Host "  Files in build: $fileCount"
          } else {
            Write-Host "[ERROR] Electron build failed - dist/win-unpacked not found"
            exit 1
          }
      
      - name: Install printer service dependencies
        working-directory: printer-service
        run: npm install --production
      
      - name: Install NSIS
        shell: powershell
        run: |
          choco install nsis -y
          echo "C:\Program Files (x86)\NSIS" >> $env:GITHUB_PATH
      
      - name: Verify NSIS installation
        shell: powershell
        run: |
          $nsisPath = "C:\Program Files (x86)\NSIS\makensis.exe"
          if (Test-Path $nsisPath) {
            Write-Host "[OK] NSIS found at: $nsisPath"
            & $nsisPath /VERSION
          } else {
            Write-Host "[ERROR] NSIS not found"
            exit 1
          }
      
      - name: Build NSIS installer
        shell: powershell
        run: |
          $version = "${{ steps.get_version.outputs.version }}"
          Write-Host "Version: $version"
          & "C:\Program Files (x86)\NSIS\makensis.exe" /DAPP_VERSION=$version /V3 installer\cottage-tandoori-setup.nsi
      
      - name: Verify installer was created
        shell: powershell
        run: |
          $version = "${{ steps.get_version.outputs.version }}"
          $installerPath = "installer\CottageTandooriSetup-$version.exe"
          
          if (Test-Path $installerPath) {
            $size = (Get-Item $installerPath).Length
            Write-Host "[OK] Installer created successfully"
            Write-Host "  Path: $installerPath"
            Write-Host "  Size: $([math]::Round($size/1MB, 2)) MB"
          } else {
            Write-Host "[ERROR] Installer not found at $installerPath"
            Get-ChildItem installer -Filter *.exe
            exit 1
          }
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}-combined
          name: Combined Installer v${{ steps.get_version.outputs.version }}
          body: |
            ## Cottage Tandoori Combined Installer
            
            This installer includes:
            - POS Desktop (Electron app)
            - Printer Service (Windows service)
            
            ### Installation
            1. Download `CottageTandooriSetup-${{ steps.get_version.outputs.version }}.exe`
            2. Run as administrator
            3. Follow setup wizard
            
            The printer service will be installed as a Windows service and started automatically.
          files: |
            installer/CottageTandooriSetup-${{ steps.get_version.outputs.version }}.exe
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
